# HISTORICAL
error.historical.entity.notfound=Error al invocar el servicio hist\u00F3rico para la entidad\: {0}
error.enum.message.notfound=No se encontr\u00F3 el mensaje para la clave\: {0}

# USER STATE
user.state.active=Usuario activo
user.state.disabled=Usuario deshabilitado
user.state.incompleteperfil=Perfil de usuario icompleto

# CRUD USER
user.creation.exit=Usuario creado: {0}, {1}

# CRUD PERSON
firstname=Primer nombre
middlename=Segundo nombre
lastName=Primer Apellido
middlelastname=Segundo Apellido

# EXCEPTION
functional.user.create.email.unique=El correo electr\u00F3nico ingresado ya est\u00E1 registrado en el sistema.
functional.user.create.nofound=El servicio solicitado no pudo ser encontrado. Por favor, verifica los detalles e intenta nuevamente.
functional.user.notfound="El usuario con id {0} no existe en el sistema."
role.security.systemadmin=Administrador del Sistema - Tiene control total sobre el sistema, incluida la gesti\u00F3n de usuarios y configuraciones. Reservado para un n\u00FAmero limitado de usuarios.
role.security.securityadmin=Administrador de Seguridad - Gestiona roles, permisos y pol\u00EDticas de seguridad. No tiene acceso a datos operativos.
role.security.appadmin=Administrador de la Aplicaci\u00F3n - Responsable de la gesti\u00F3n de las funcionalidades de la aplicaci\u00F3n, sin acceso a configuraciones de seguridad.
role.security.auditor=Auditor - Acceso de solo lectura para monitorear y auditar actividades del sistema con fines de cumplimiento y seguridad.
role.security.user=Usuario Regular - Rol est\u00E1ndar con acceso a funcionalidades b\u00E1sicas de la aplicaci\u00F3n seg\u00FAn los permisos asignados.
# Permisos para entidades
permission.create.entity=Permite crear una entidad
permission.view.entity=Permite ver una entidad
permission.update.entity=Permite actualizar una entidad
permission.delete.entity=Permite eliminar una entidad
# Permisos para usuarios
permission.create.user=Permite crear un perfil de usuario
permission.view.user=Permite ver el propio perfil de usuario
permission.delete.user=Permite eliminar el propio perfil de usuario
permission.update.user=Permite actualizar el propio perfil de usuario

# User validaciones
functional.user.email.exists=La direcci\u00F3n de correo electr\u00F3nico ya existe en el sistema

# Person:
functional.person.notfound=La persona con id {0} no existe en el sistema